digraph FlightBookingSystem {
  // Graph settings
  rankdir=TB;
  splines=ortho;
  node [shape=box, style="filled,rounded", fillcolor=lightblue, fontname="Arial", margin=0.2];
  edge [fontname="Arial", fontsize=10];

  // Modules
  AppModule [label="AppModule\n(Main Module)", fillcolor=lightgreen, shape=component];
  AuthModule [label="AuthModule\n(Authentication)", fillcolor=lightyellow, shape=component];
  FlightModule [label="FlightModule\n(Flight Management)", fillcolor=lightpink, shape=component];
  BookingModule [label="BookingModule\n(Booking Management)", fillcolor=lightcyan, shape=component];
  PassengerModule [label="PassengerModule\n(Passenger Management)", fillcolor=lavender, shape=component];
  TicketModule [label="TicketModule\n(Ticket Management)", fillcolor=peachpuff, shape=component];
  UserModule [label="UserModule\n(User Profiles & Preferences)", fillcolor=lightsteelblue, shape=component];
  SupabaseModule [label="SupabaseModule\n(Database Connection)", fillcolor=lightsalmon, shape=component];

  // Services
  AppService [label="AppService"];
  AuthService [label="AuthService"];
  FlightService [label="FlightService"];
  BookingService [label="BookingService"];
  PassengerService [label="PassengerService"];
  TicketService [label="TicketService"];
  UserService [label="UserService"];
  SupabaseService [label="SupabaseService"];

  // Controllers
  AppController [label="AppController", shape=hexagon];
  AuthController [label="AuthController", shape=hexagon];
  FlightController [label="FlightController", shape=hexagon];
  BookingController [label="BookingController", shape=hexagon];
  TicketController [label="TicketController", shape=hexagon];
  UserController [label="UserController", shape=hexagon];

  // Guards and Strategies
  JwtAuthGuard [label="JwtAuthGuard", fillcolor=lightgrey, shape=diamond];
  JwtStrategy [label="JwtStrategy", fillcolor=lightgrey, shape=diamond];
  RolesGuard [label="RolesGuard", fillcolor=lightgrey, shape=diamond];

  // DTOs and Enums
  DTOs [label="DTOs\n(Data Transfer Objects)", fillcolor=mistyrose, shape=note];
  Enums [label="Enums\n(CabinClass, PassengerType, etc.)", fillcolor=mistyrose, shape=note];

  // Module relationships
  AppModule -> {AuthModule, FlightModule, BookingModule, PassengerModule, TicketModule, UserModule, SupabaseModule} [label="imports"];
  AuthModule -> SupabaseModule [label="imports"];
  FlightModule -> SupabaseModule [label="imports"];
  BookingModule -> {SupabaseModule, PassengerModule, TicketModule, AuthModule} [label="imports"];
  PassengerModule -> SupabaseModule [label="imports"];
  TicketModule -> SupabaseModule [label="imports"];
  UserModule -> {SupabaseModule, AuthModule} [label="imports"];

  // Module containment
  edge [style=dashed, label="contains"];
  AppModule -> {AppService, AppController};
  AuthModule -> {AuthService, AuthController, JwtAuthGuard, JwtStrategy, RolesGuard};
  FlightModule -> {FlightService, FlightController};
  BookingModule -> {BookingService, BookingController};
  PassengerModule -> {PassengerService};
  TicketModule -> {TicketService, TicketController};
  UserModule -> {UserService, UserController};
  SupabaseModule -> {SupabaseService};

  // Service dependencies
  edge [style=solid, color=blue, label="uses"];
  AuthService -> SupabaseService;
  FlightService -> SupabaseService;
  BookingService -> {SupabaseService, PassengerService, TicketService};
  PassengerService -> SupabaseService;
  TicketService -> SupabaseService;
  UserService -> SupabaseService;
  JwtStrategy -> SupabaseService;

  // Controller dependencies
  edge [style=solid, color=green, label="injects"];
  AppController -> AppService;
  AuthController -> AuthService;
  FlightController -> FlightService;
  BookingController -> BookingService;
  TicketController -> TicketService;
  UserController -> UserService;

  // Controller protection
  edge [style=dotted, color=red, label="protects"];
  JwtAuthGuard -> {BookingController, AppController, UserController};

  // Data structures
  edge [style=dotted, color=grey, label="uses"];
  {AuthService, AuthController} -> DTOs;
  {FlightService, FlightController} -> DTOs;
  {BookingService, BookingController} -> DTOs;
  {PassengerService} -> DTOs;
  {TicketService, TicketController} -> DTOs;
  {FlightService, BookingService} -> Enums;
}
